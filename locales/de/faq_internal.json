{
  "s1": {
    "message": "Wo finde ich die Bedeutung aller Adblock Plus Einstellungen?"
  },
  "s11": {
    "message": "Für Entwickler: um eine Content Policy zu registrieren, muss man <a>eine XPCOM-Komponente erstellen</a> [en], die die <a>nsIContentPolicy-Schnittstelle</a> [en] implementiert. Man sollte sicherstellen, dass die Methode registerSelf des Moduls diese Komponente zu der Kategorie \"content-policy\" hinzufügt (das ist mit dem <a>Kategorienverwalter</a> [en] möglich). Das war's, nun sollte die Methode shouldLoad in der Komponente für alle Anfragen aufgerufen werden und kann entscheiden, ob die Anfrage zugelassen wird."
  },
  "s12": {
    "message": "Wie werden Filter in Adblock Plus verarbeitet und welche Filter sind schneller?"
  },
  "s13": {
    "message": "Alle Filter werden intern in <a>reguläre Ausdrücke</a> umgewandelt, auch solche, die nicht als reguläre Ausdrücke eingegeben wurden. So wird zum Beispiel der Filter <code>ad*banner.gif|</code> in den regulären Ausdruck <code>/ad.*banner\\.gif$/</code> umgewandelt. Allerdings, wenn Adblock Plus eine Adresse zum Überprüfen bekommt, wird diese nicht einfach nacheinander mit allen Filtern verglichen — das würde den Browser unnötig verlangsamen."
  },
  "s14": {
    "message": "Außer der Umwandlung der Filter in reguläre Ausdrücke versucht Adblock Plus auch, einfachen Text aus diesen zu extrahieren. Was es braucht ist eine eindeutige Zeichenfolge mit acht Zeichen (ein \"Kürzel\"), das in jeder Adresse vorhanden sein muss, auf die der Filter zutrifft (die Länge der Zeichenfolge hat keine besondere Bedeutung, acht Zeichen schienen einfach vernünftig zu sein). Zum Beispiel, wenn man den Filter <code>|http://ad.*</code> hat, hat Adblock Plus die Wahl zwischen \"http://a\", \"ttp://ad\" und \"tp://ad.\" als Kürzel, jede dieser Zeichenfolgen wird auf jeden Fall in einer Adresse vorhanden sind, auf die der Filter zutrifft. Leider ist es aber nicht immer möglich, einen solchen Kürzel zu finden, z.B. wenn der Filter einfach keine acht Zeichen hat, die nicht von Jokerzeichen unterbrochen werden, oder wenn der Filter als regulärer Ausdruck eingegeben wurde."
  },
  "s15": {
    "message": "Alle Kürzel werden in einer Nachschlagetabelle abgelegt, Adblock Plus kann dann Filter sehr effizient nach ihrem Kürzel finden. Wenn eine Adresse überprüft werden muss, sucht Adblock Plus in dieser zunächst nach bekannten Kürzeln (das kann sehr schnell gemacht werden, die benötigte Zeit hängt kaum von der Anzahl der Kürzel ab). Nur wenn das Kürzel gefunden wird, wird die Adresse mit dem dazugehörigen Filter verglichen. Allerdings müssen Filter ohne Kürzel weiterhin jedesmal überprüft werden, so dass diese die Ausführung verlangsamen."
  },
  "s16": {
    "message": "Zusammenfassung: welche Filter sollten in einer schnellen Filterliste verwendet werden? Man sollte so wenige reguläre Ausdrücke wie nur möglich verwenden, diese sind immer langsam. Man sollte auch sicherstellen, dass die einfachen Filter mindestens acht Zeichen haben, die nicht von Sonderzeichen wie * unterbrochen werden, andernfalls werden diese genauso langsam wie reguläre Ausdrücke sein. Fallen die Filter nicht in diese beiden Kategorien, macht es kaum noch Unterschied, wie viele es sind, die Zeit für die Verarbeitung ist immer dieselbe. Das heißt, dass man einen regulären Ausdruck mit 20 einfachen Filtern ersetzen kann und es wird sich immer noch lohnen. Und da wir schon dabei sind — der <a>Übersetzer für reguläre Ausdrücke</a> ist sehr empfehlenswert."
  },
  "s17": {
    "message": "Der Algorithmus für Anwendung der Filter im Detail [en]"
  },
  "s18": {
    "message": "Wie funktioniert das Verstecken von Elementen?"
  },
  "s20": {
    "message": "Regeln zum Verstecken von Elementen werden in <a>CSS</a> [en] umgewandelt, das auf allen Seiten angewandt wird, die man besucht. So wird die Regel <code>example.com#div(evil_ad)</code> umgewandelt in:"
  },
  "s22": {
    "message": "@-moz-document ist der Vorschlag einer Erweiterung für das CSS-Standard, man kann mehr dazu im <a>Mozilla Developer Center</a> [en] lesen."
  },
  "s23": {
    "message": "Regeln, die nicht auf eine Domain beschränkt sind, werden auf die Protokolle http:// und https:// beschränkt, damit sie nicht versehentlich auf Elemente des Browsers angewandt werden (diese benutzen das chrome:// Protokoll). Die Regel <code>#div(evil_ad)</code> wird zum Beispiel übersetzt in:"
  },
  "s26": {
    "message": "Für Entwickler: Adblock Plus benutzt hier das <a>Stylesheet Service</a>  [en]. Diese Schnittstelle kam mit Gecko 1.8 dazu und erlaubt Erweiterungen, dynamisch Benutzer-Stylesheets hinzuzufügen (zuvor musste man dazu userContent.css ändern, was einen Browser-Neustart erfordert). Benutzer-Stylesheets überschreiben die CSS-Einstellungen in den Webseiten, sie bekommen den höchstmöglichen Wert für <a>importance</a>."
  },
  "s27": {
    "message": "Wie kann/soll die erste Zeile der Filterliste aussehen?"
  },
  "s28": {
    "message": "Normalerweise ist die erste Zeile der Filterliste einfach <code>[Adblock]</code>. Allerdings hat man vielleicht bemerkt, dass die neuesten Versionen von Adblock Plus manchmal bei Export einen anderen Text für die erste Zeile verwenden. Das wird dann gemacht, wenn die Liste Filter enthält, die von älteren Versionen von Adblock Plus oder Adblock nicht unterstützt werden. Ein Beispiel wäre:"
  },
  "s29": {
    "message": "Das ist einfach ein Kommentar. Adblock (und deswegen auch Adblock Plus) ignoriert alles, was vor der eigentlichen Markierung kommt. Die benötigte Version von Adblock Plus wird nicht erzwungen, weil es in Adblock Plus 0.6.1.2 den notwendigen Mechanismus noch nicht gab. Allerdings, wenn man Filter mit noch neuerer Syntax verwendet, bekommt man irgendwas wie:"
  },
  "s3": {
    "description": "{1}: extensions.adblockplus., {2}: adblock.",
    "message": "Adblock Plus definiert eine Reihe von Einstellungen, die über <a>about:config</a> zugängig sind. Diese fangen alle mit <code>{1}</code> an (das ist für Adblock und Adblock Plus 0.5 anders, dort wird das Prefix <code>{2}</code> benutzt). Eine komplette Liste mit Erklärungen findet sich <a>hier</a>."
  },
  "s3-link": {
    "message": "http://www.firefox-browser.de/wiki/About:config"
  },
  "s30": {
    "message": "Dieser Dateikopf wird von Adblock Plus 0.7.1 und höher unterstützt. Ältere Versionen von Adblock Plus und Adblock können Dateien mit einem solchen Dateikopf nicht öffnen. Die aktuellen Versionen werden dagegen die Versionsnummer in der Datei mit ihrer eigenen Versionsnummer vergleichen. Benötigt die Datei eine neuere Version von Adblock Plus, wird der Benutzer beim Import eine entsprechende Fehlermeldung bekommen. Abonnements werden solche Filterlisten trotzdem noch laden, werden aber auch eine Warnung in den Einstellungen von Adblock Plus anzeigen."
  },
  "s31": {
    "message": "Die Versionsnummer kann auch weggelassen werden, womit sich der Dateikopf auf <code>[Adblock Plus]</code> reduziert. Eine solche Datei wird dann natürlich auch nur von Adblock Plus 0.7.1 oder höher akzeptiert."
  },
  "s4": {
    "message": "Wie verbinde ich meine Erweiterung mit Adblock Plus?"
  },
  "s5": {
    "description": "{1}: IAdblockPlus",
    "message": "Um die Integration von Adblock Plus mit anderen Erweiterungen zu erleichtern, wird die Schnittstelle <code>{1}</code> exportiert. Die <a>Interface-Dokumentation</a> enthält alle notwendigen Details."
  },
  "s6": {
    "message": "Wie werden Adressen in Adblock Plus blockiert?"
  },
  "s7": {
    "message": "Die ganze schwere Arbeit wird hier eigentlich von Gecko verrichtet, der Basis, auf der Firefox, Thunderbird und andere Anwendungen aufbauen. Dieser Mechanismus wird \"Content Policies\" genannt. Content Policy ist einfach ein JavaScript-Objekt (oder auch C++), das jedesmal aufgerufen wird, wenn der Browser etwas laden muss. Es kann sich dann die Adresse anschauen, die geladen werden soll, vielleicht auch einige andere Daten berücksichtigen, und entscheiden, ob die Anfrage gestattet werden soll. Es gibt einige eingebaute Content Policies (wenn man in Firefox oder SeaMonkey angibt, von welchen Domains keine Bilder geladen werden sollen, konfiguriert man eine solche eingebaute Content Policy) und jede Erweiterung kann auch eine registrieren. Also braucht Adblock Plus im Grunde nur, eine Content Policy zu registrieren, alles andere ist nur Anwendungslogik für Entscheidungen, was erlaubt und was blockiert werden soll. Und natürlich ist da noch das Benutzerinterface zum Konfigurieren von Filterregeln."
  },
  "title": {
    "message": "FAQ - Funktionsweise von Adblock Plus"
  }
}