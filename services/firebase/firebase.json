{
  "hosting": {
    "public": "public",
    "ignore": [
      "firebase.json",
      "**/.*",
      "**/node_modules/**",
      "utils",
      "prebuild_staging.mjs"
    ],
    "cleanUrls": true,
    "i18n": {
      "root": "/"
    },
    "redirects": [
      // Refs #493 redirect old browser index pages to root index page
      {
        "regex": "(?i)^/android$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^(.*)/android$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^/chrome$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^(.*)/chrome$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^/edge$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^(.*)/edge$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^/firefox$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^(.*)/firefox$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^/internet-expolorer$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^(.*)/internet-explorer$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^/opera$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^(.*)/opera$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^/safari$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^(.*)/safari$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^/yandex-browser$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^(.*)/yandex-browser$",
        "destination": "/",
        "type": 301
      },

      // Refd #617 migrate simple file-to-file rules to .htaccess
      {
        "regex": "(?i)^(.*/)?(android|chrome|edge|firefox|internet-explorer|opera|safari|yandex-browser)/?$",
        "destination": "/",
        "type": 301
      },
      {
        "regex": "(?i)^/(\\w\\w(_\\w\\w)?/)?changelog-1.3.1$",
        "destination": "/$1\\changelog-1.3",
        "type": 301
      },
      {
        "regex": "(?i)^/downloads/(.*)",
        "destination": "https://downloads.adblockplus.org/$1",
        "type": 301
      },
      {
        "regex": "(?i)^/update.rdf$",
        "destination": "https://update.adblockplus.org/gecko/update.rdf",
        "type": 301
      },
      {
        "regex": "(?i)^/updates.plist$",
        "destination": "https://update.adblockplus.org/adblockplussafari/updates.plist",
        "type": 301
      },
      {
        "regex": "(?i)^/androidupdate.json$",
        "destination": "https://update.adblockplus.org/adblockplusandroid/update.json",
        "type": 301
      },
      {
        "regex": "(?i)^/androidupdates.xml$",
        "destination": "https://update.adblockplus.org/adblockplusandroid/updates.xml",
        "type": 301
      },
      {
        "regex": "(?i)^/ieupdate.json$",
        "destination": "https://update.adblockplus.org/adblockplusie/update.json",
        "type": 301
      },
      {
        "regex": "(?i)^/(\\w\\w(_\\w\\w)?/)?adblock-browser/?$",
        "destination": "https://adblockbrowser.org/",
        "type": 301
      },
      {
        "regex": "(?i)^/devbuilds/?$",
        "destination": "https://adblockplus.org/development-builds",
        "type": 301
      },
      {
        "regex": "(?i)^/poland/?$",
        "destination": "/poland.html",
        "type": 301
      },
      {
        "regex": "(?i)^/de/ad-blocker-safari/?$",
        "destination": "https://adblockplus.org/de/",
        "type": 301
      },
      {
        "regex": "(?i)^/fr/ad-blocker-safari/?$",
        "destination": "https://adblockplus.org/fr/",
        "type": 301
      },
      {
        "regex": "(?i)^/(\\w\\w(_\\w\\w)?/)?filters$",
        "destination": "https://help.adblockplus.org/hc/articles/360062733293",
        "type": 301
      },
      {
        "regex": "(?i)^/(\\w\\w(_\\w\\w)?/)?android-about/?$",
        "destination": "https://adblockplus.org/",
        "type": 301
      },

      // Refd adblockplus-org#16 redirect removed job posting to Careers Page
      {
        "regex": "(?i)^/(\\w\\w(_\\w\\w)?/)?software-engineer-adblock-plus/?$",
        "destination": "https://adblockplus.org/careers",
        "type": 301
      },

      {
        "regex": "(?i)^/(\\w\\w(_\\w\\w)?/)?careers/?$",
        "destination": "https://adblock.pinpointhq.com/en#js-careers-jobs-block",
        "type": 301
      },      

      // Refd #946
      {
        "regex": "(?i)^/(blog|releases|development-builds|atom|rss|category|section|author|file_download|images|textpattern)($|/)",
        "destination": "https://blog.adblockplus.org/:1",
        "type": 301
      },
      {
        "regex": "(?i)^/forum($|/.*)",
        "destination": "https://forum.adblockplus.org/:1",
        "type": 301
      },

      // Redirect to cloud run rewrite for payment config
      {
        "source": "/js/payment/config/load.js",
        "destination": "/payment-config-function",
        "type": 301
      }
    ],
    "rewrites": [
      {
        "source": "/payment-config-function",
        "run": {
          "serviceId": "AUTOMATICALLY_REPLACED_BY_BUILD",
          "region": "europe-west1"
        }
      },
      {
        "source": "/currency",
        "run": {
          "serviceId": "AUTOMATICALLY_REPLACED_BY_BUILD",
          "region": "europe-west1"
        }
      },
      {
        "source": "/installed-function/:language?",
        "run": {
          "serviceId": "AUTOMATICALLY_REPLACED_BY_BUILD",
          "region": "europe-west1"
        }
      },
      {
        "source": "/contribution-function/:language?",
        "run": {
          "serviceId": "AUTOMATICALLY_REPLACED_BY_BUILD",
          "region": "europe-west1"
        }
      },
      // IMPORTANT: Fallback locale rerouting function, must stay at bottom of "rewrites" array
      // Refd #943 - URLs containing non-exact matching locale paths return a 404
      {
        "regex": "(?i)^/([\\w-]{2,6})(/.*)?$",
        "run": {
          "serviceId": "AUTOMATICALLY_REPLACED_BY_BUILD",
          "region": "europe-west1"
        }
      }
    ],

    "headers": [
      {
        "source": "**",
        "headers": [
          {
            "key": "X-Frame-Options",
            "value": "sameorigin"
          }
        ]
      }
    ]
  }
}
