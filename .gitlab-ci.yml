---

variables:
  DEFAULT_LOCALE: en

.staging:
  variables: &staging
    FIREBASE_DOMAIN: https://staging.adblockplus.dev/
    PREVIEW_CHANNEL_EXPIRATION: 30d

.production:
  variables: &production
    DOMAIN: adblockplus.org
    FIREBASE_DOMAIN: https://www.adblockplus.dev/

.common:
  tags:
    - &NODE_IMAGE node:16-alpine
    - &GOOGLE_CLOUD_SDK_IMAGE google/cloud-sdk:409.0.0
    - &BUILD_IMAGE registry.gitlab.com/eyeo/websites/docker/adblockinc-cms-202208.1:latest

stages:
  - prebuild_firebase
  - build_firebase
  - deploy_cloud_run
  - deploy_firebase
  - test

pre_review_build:
  stage: prebuild_firebase
  except:
    - master
    - schedules
  image: *NODE_IMAGE
  before_script:
    - npm install -g firebase-tools@11.13.0
    - cp $GCP_SERVICE_ACCOUNT_CREDENTIALS ~/gcp.json
    - export GOOGLE_APPLICATION_CREDENTIALS=~/gcp.json
  script:
    - cd services/firebase
    - firebase use staging
    - node ./prebuild_staging.mjs
  after_script:
    - rm -rf ~/gcp.json
  artifacts:
    reports:
      dotenv: services/firebase/build.env
  environment:
    name: review/$CI_COMMIT_REF_SLUG

build:review:
  stage: build_firebase
  except:
    - master
    - schedules
  variables:
    <<: *staging
  image: *BUILD_IMAGE
  dependencies:
    - pre_review_build
  before_script:
    - python3 -m pip install -q crudini
  script:
    - crudini --set settings.ini general siteurl "$REVIEW_URL"
    - python3 -m cms.bin.generate_static_pages $PWD services/firebase/public
    - python services/firebase/utils/html_extender.py services/firebase/public
    # copy contents of default locale to base of public root (for firebase), 
    # this addresses getting canonical page if no language translation available
    - cp -a services/firebase/public/$DEFAULT_LOCALE/. services/firebase/public/.
  artifacts:
    name: $CI_COMMIT_REF_SLUG
    paths:
      - services/firebase/public

build:review:staging:
  stage: build_firebase
  except:
    - schedules
  variables:
    <<: *staging
  image: *BUILD_IMAGE
  before_script:
    - python3 -m pip install -q crudini
  script:
    - crudini --set settings.ini general siteurl "$FIREBASE_DOMAIN"
    - python3 -m cms.bin.generate_static_pages $PWD services/firebase/public
    - python services/firebase/utils/html_extender.py services/firebase/public
    # copy contents of default locale to base of public root (for firebase), 
    # this addresses getting canonical page if no language translation available
    - cp -a services/firebase/public/$DEFAULT_LOCALE/. services/firebase/public/.
  artifacts:
    name: $CI_COMMIT_REF_SLUG
    paths:
      - services/firebase/public
  only:
    - master

build:production:
  stage: build_firebase
  except:
    - schedules
  variables:
    <<: *production
  image: *BUILD_IMAGE
  before_script:
    - python3 -m pip install -q crudini
  script:
    - crudini --set settings.ini general siteurl https://$DOMAIN
    - python3 -m cms.bin.generate_static_pages $PWD services/firebase/public
    - python services/firebase/utils/html_extender.py services/firebase/public
    # copy contents of default locale to base of public root (for firebase), 
    # this addresses getting canonical page if no language translation available
    - cp -a services/firebase/public/$DEFAULT_LOCALE/. services/firebase/public/.
  artifacts:
    name: $CI_COMMIT_REF_SLUG
    paths:
      - services/firebase/public
  only:
    - master

deploy_cloud_run:review:
  stage: deploy_cloud_run
  except:
    - master
    - schedules
  image: *GOOGLE_CLOUD_SDK_IMAGE
  before_script:
    - gcloud auth activate-service-account --key-file $GCP_SERVICE_ACCOUNT_CREDENTIALS
    - gcloud config set project $GCP_PROJECT_ID
  script:
    - cd services/cloudrun
    - gcloud builds submit --tag europe-west1-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_PROJECT_ID/$CI_COMMIT_REF_SLUG
    - gcloud run deploy b-$CI_COMMIT_REF_SLUG --image europe-west1-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_PROJECT_ID/$CI_COMMIT_REF_SLUG:latest --region europe-west1 --allow-unauthenticated
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    on_stop: teardown_cloud_run:review

teardown_cloud_run:review:
  stage: deploy_cloud_run
  except:
    - master
    - schedules
  image: *GOOGLE_CLOUD_SDK_IMAGE
  before_script:
    - gcloud auth activate-service-account --key-file $GCP_SERVICE_ACCOUNT_CREDENTIALS
    - gcloud config set project $GCP_PROJECT_ID
  script:
    - gcloud run services delete b-$CI_COMMIT_REF_SLUG --region europe-west1 --quiet
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual

deploy_cloud_run:review:staging:
  stage: deploy_cloud_run
  except:
    - schedules
  image: *GOOGLE_CLOUD_SDK_IMAGE
  before_script:
    - gcloud auth activate-service-account --key-file $GCP_SERVICE_ACCOUNT_CREDENTIALS
    - gcloud config set project $GCP_PROJECT_ID
  script:
    - cd services/cloudrun
    - gcloud builds submit --tag europe-west1-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_PROJECT_ID/$CI_COMMIT_REF_SLUG
    - gcloud run deploy $CI_COMMIT_REF_SLUG --image europe-west1-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_PROJECT_ID/$CI_COMMIT_REF_SLUG:latest --region europe-west1 --allow-unauthenticated
  environment:
    name: review/staging/$CI_COMMIT_REF_SLUG
  only:
    - master

deploy_cloud_run:production:
  stage: deploy_cloud_run
  except:
    - schedules
  image: *GOOGLE_CLOUD_SDK_IMAGE
  before_script:
    - gcloud auth activate-service-account --key-file $GCP_SERVICE_ACCOUNT_CREDENTIALS
    - gcloud config set project $GCP_PROJECT_ID
  script:
    - cd services/cloudrun
    - gcloud builds submit --tag europe-west1-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_PROJECT_ID/$CI_COMMIT_REF_SLUG
    - gcloud run deploy $CI_COMMIT_REF_SLUG --image europe-west1-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_PROJECT_ID/$CI_COMMIT_REF_SLUG:latest --region europe-west1 --allow-unauthenticated
  environment:
    name: production/$CI_COMMIT_REF_SLUG
  only:
    - master

deploy_firebase_hosting:review:
  stage: deploy_firebase
  except:
    - master
    - schedules
  image: *NODE_IMAGE
  variables:
    <<: *staging
  dependencies:
    - pre_review_build
    - build:review
  before_script:
    - npm install -g firebase-tools@11.13.0
    - npm install commander@"~9.4.0"
    - npm install json5@"~2.2.1"
    - cp $GCP_SERVICE_ACCOUNT_CREDENTIALS ~/gcp.json
    - export GOOGLE_APPLICATION_CREDENTIALS=~/gcp.json
  script:
    - npm run rename-service-ids -- --input ./services/firebase/firebase.json --name b-$CI_COMMIT_REF_SLUG
    - cd services/firebase
    - firebase use staging
    - firebase hosting:channel:deploy $CI_COMMIT_REF_SLUG --expires $PREVIEW_CHANNEL_EXPIRATION
  after_script:
    - rm -rf ~/gcp.json
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: $REVIEW_URL
    on_stop: teardown_firebase_hosting:review

teardown_firebase_hosting:review:
  stage: deploy_firebase
  except:
    - master
    - schedules
  image: *NODE_IMAGE
  before_script:
    - npm install -g firebase-tools@11.13.0
    - cp $GCP_SERVICE_ACCOUNT_CREDENTIALS ~/gcp.json
    - export GOOGLE_APPLICATION_CREDENTIALS=~/gcp.json
  script:
    - cd services/firebase
    - firebase use staging
    - firebase hosting:channel:delete $CI_COMMIT_REF_SLUG -f
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual

deploy_firebase_hosting:review:staging:
  stage: deploy_firebase
  except:
    - schedules
  image:
    *NODE_IMAGE
  variables:
    <<: *staging
  dependencies:
    - build:review:staging
  before_script:
    - npm install -g firebase-tools@11.13.0
    - npm install commander@"~9.4.0"
    - npm install json5@"~2.2.1"
    - cp $GCP_SERVICE_ACCOUNT_CREDENTIALS ~/gcp.json
    - export GOOGLE_APPLICATION_CREDENTIALS=~/gcp.json
  script:
    - npm run rename-service-ids -- --input ./services/firebase/firebase.json --name $CI_COMMIT_REF_SLUG
    - cd services/firebase
    - firebase use staging
    - firebase deploy --only hosting
  after_script:
    - rm -rf ~/gcp.json
  environment:
    name: review/staging/$CI_COMMIT_REF_SLUG
    url: $FIREBASE_DOMAIN
  only:
    - master

deploy_firebase_hosting:production:
  stage: deploy_firebase
  except:
    - schedules
  image: *NODE_IMAGE
  variables:
    <<: *production
  dependencies:
    - build:production
  before_script:
    - npm install -g firebase-tools@11.13.0
    - npm install commander@"~9.4.0"
    - npm install json5@"~2.2.1"
    - cp $GCP_SERVICE_ACCOUNT_CREDENTIALS ~/gcp.json
    - export GOOGLE_APPLICATION_CREDENTIALS=~/gcp.json
  script:
    - npm run rename-service-ids -- --input ./services/firebase/firebase.json --name $CI_COMMIT_REF_SLUG
    - cd services/firebase
    - firebase use production
    - firebase deploy --only hosting
  after_script:
    - rm -rf ~/gcp.json
  environment:
    name: production/$CI_COMMIT_REF_SLUG
    url: $FIREBASE_DOMAIN
  only:
    - master

automated_tests:
  stage: test
  trigger:
    project: eyeo/browser-extensions-and-premium/user-accounts/platform-team-tests
    branch: "carly-abp" # will be removed after testing concludes
  variables:
    RUN_TEST: "adblockpluse2etest"
    REVIEW_URL: "$REVIEW_URL"
  needs: ["deploy_firebase_hosting:review"]
